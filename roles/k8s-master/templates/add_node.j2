#!/bin/sh
{% if  ansible_hostname == hostvars[groups['etcd'][1]]['inventory_hostname'] %}
export CP0_IP={{ hostvars[groups['etcd'][0]]['ip'] }}
export CP0_HOSTNAME={{ hostvars[groups['etcd'][0]]['inventory_hostname'] }}
export CP1_IP={{ hostvars[groups['etcd'][1]]['ip'] }}
export CP1_HOSTNAME={{ hostvars[groups['etcd'][1]]['inventory_hostname'] }}

export KUBECONFIG=/etc/kubernetes/admin.conf 
kubectl exec -n kube-system etcd-${CP0_HOSTNAME} -- etcdctl --ca-file /etc/kubernetes/pki/etcd/ca.crt --cert-file /etc/kubernetes/pki/etcd/peer.crt --key-file /etc/kubernetes/pki/etcd/peer.key --endpoints=https://${CP0_IP}:2379 member add ${CP1_HOSTNAME} https://${CP1_IP}:2380
kubeadm alpha phase etcd local --config /etc/kubernetes/kubeadm-master.yml
touch /tmp/add_node.exist

{% elif ansible_hostname == hostvars[groups['etcd'][2]]['inventory_hostname'] %}

export CP0_IP={{ hostvars[groups['etcd'][0]]['ip'] }}
export CP0_HOSTNAME={{ hostvars[groups['etcd'][0]]['inventory_hostname'] }}
export CP1_IP={{ hostvars[groups['etcd'][2]]['ip'] }}
export CP1_HOSTNAME={{ hostvars[groups['etcd'][2]]['inventory_hostname'] }}

export KUBECONFIG=/etc/kubernetes/admin.conf 
kubectl exec -n kube-system etcd-${CP0_HOSTNAME} -- etcdctl --ca-file /etc/kubernetes/pki/etcd/ca.crt --cert-file /etc/kubernetes/pki/etcd/peer.crt --key-file /etc/kubernetes/pki/etcd/peer.key --endpoints=https://${CP0_IP}:2379 member add ${CP1_HOSTNAME} https://${CP1_IP}:2380
kubeadm alpha phase etcd local --config /etc/kubernetes/kubeadm-master.yml
touch /tmp/add_node.exist

{% endif %}
